/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


/ {
    macros {
        Date: Date {
            compatible = "zmk,behavior-macro";
            label = "DATE";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp NUMBER_9 &kp SLASH &kp NUMBER_2 &kp NUMBER_0 &kp NUMBER_2 &kp NUMBER_3>;
        };
        BENLLW: BENLLW {
            compatible = "zmk,behavior-macro";
            label = "BENLLW";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp N &kp L &kp L &kp W &kp AT &kp G &kp M &kp A &kp I &kp L &kp PERIOD &kp C &kp O &kp M>;
        };
        Joyce18889: Joyce18889 {
            compatible = "zmk,behavior-macro";
            label = "JOYCE18889";
            #binding-cells = <0>;
            bindings = <&kp J &kp O &kp Y &kp C &kp E &kp NUMBER_1 &kp NUMBER_8 &kp NUMBER_8 &kp NUMBER_8 &kp NUMBER_9 &kp AT_SIGN &kp G &kp M &kp A &kp I &kp L &kp PERIOD &kp C &kp O &kp M>;
        };
        macro_doherty: macro_doherty {
            label = "macro_doherty";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp B &kp E &kp N &kp DOT &kp L &kp E &kp E &kp AT &kp D &kp O &kp H &kp E &kp R &kp T &kp Y &kp DOT &kp C &kp O &kp DOT &kp U &kp K>;
        };
        teresachng: teresachng {
            compatible = "zmk,behavior-macro";
            label = "TERESACHNG";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp R &kp E &kp S &kp A &kp M &kp G &kp C &kp H &kp N &kp G &kp AT_SIGN &kp G &kp M &kp A &kp I &kp L &kp PERIOD &kp C &kp O &kp M>;
        };
        ben: ben {
            compatible = "zmk,behavior-macro";
            label = "BEN";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp LS(B) &kp E &kp N>;
        };
        Mouse1: Mouse1 {
            compatible = "zmk,behavior-macro";
            label = "MOUSE1";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT &kp KP_NUMBER_5>;
        };
        Mouse2: Mouse2 {
            compatible = "zmk,behavior-macro";
            label = "MOUSE2";
            #binding-cells = <0>;
            bindings = <&kp KP_MINUS &kp KP_NUMBER_5 &kp KP_SLASH>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        CTRLbackspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <22 23>;
        };

        Hyphen {
            bindings = <&kp MINUS>;
            key-positions = <33 34>;
        };

        Date {
            bindings = <&Date>;
            key-positions = <19 20>;
            layers = <1>;
        };

        Ben {
            bindings = <&ben>;
            key-positions = <32 33 34>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <32 33>;
            layers = <1>;
        };

        Times {
            bindings = <&kp ASTERISK>;
            key-positions = <8 9>;
            layers = <1>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <0 24>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <0 25>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <0 26>;
        };

        paste {
            bindings = <&kp V>;
            key-positions = <0 27>;
        };

        Capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <1 2 3 0>;
        };

        Numlock {
            bindings = <&kp KP_NUMLOCK>;
            key-positions = <8 9 10 11>;
        };

        CTRLW {
            bindings = <&kp LC(W)>;
            key-positions = <1 0>;
        };

        CtrlR {
            bindings = <&kp R>;
            key-positions = <0 3>;
        };

        CtrlT {
            bindings = <&kp LC(T)>;
            key-positions = <0 4>;
        };

        CtrlB {
            bindings = <&kp LC(B)>;
            key-positions = <28 0>;
        };

        LockWinL {
            bindings = <&kp LG(L)>;
            key-positions = <11 22>;
        };

        CtrlA {
            bindings = <&kp LC(A)>;
            key-positions = <12 0>;
        };

        CtrlF {
            bindings = <&kp LC(F)>;
            key-positions = <0 15>;
        };

        Equals {
            bindings = <&kp EQUAL>;
            key-positions = <10 11>;
            layers = <1>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&hm LCTRL Q  &kp W  &kp E  &kp R  &kp T       &kp LG(NUMBER_1)    &kp LC(C)     &kp Y      &kp U  &kp I      &kp O    &hm LGUI P
&kp A        &kp S  &kp D  &kp F  &kp G       &kp LG(NUMBER_3)    &kp LC(X)     &kp H      &kp J  &kp K      &kp L    &kp BACKSPACE
&kp Z        &kp X  &kp C  &kp V  &kp B       &kp LG(NUMBER_4)    &kp LC(V)     &kp N      &kp M  &kp COMMA  &kp DOT  &kp RET
                           &mo 1  &kp LSHIFT  &kp LCTRL           &kp LEFT_ALT  &kp SPACE  &mo 2
            >;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&kp LCTRL   &mkp RCLK  &kp UP    &mkp LCLK  &mwh SCROLL_UP    &kp LG(N5)          &kp LG(NUMBER_1)  &kp COLON   &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp DELETE
&kp LSHIFT  &kp LEFT   &kp DOWN  &kp RIGHT  &mwh SCROLL_DOWN  &kp LG(NUMBER_6)    &kp LG(N5)        &kp SLASH   &kp N4        &kp N5        &kp NUMBER_6  &kp BACKSPACE
&mo 3       &kp HOME   &kp LALT  &kp END    &kp TAB           &kp LG(N8)          &kp LG(N8)        &kp PERIOD  &kp N1        &kp NUMBER_2  &kp N3        &kp RET
                                 &none      &kp ESC           &mo 4               &none             &kp SPACE   &kp NUMBER_0
            >;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&kp LCTRL       &mkp RCLK         &mmv MOVE_UP       &mkp LCLK        &mwh SCROLL_UP     &teresachng    &macro_doherty  &kp EXCL       &kp AT    &kp STAR   &kp LPAR  &kp RPAR
&kp LEFT_SHIFT  &mmv MOVE_LEFT    &mmv MOVE_DOWN     &mmv MOVE_RIGHT  &mwh SCROLL_DOWN   &none          &BENLLW         &kp SEMICOLON  &kp DQT   &kp EQUAL  &kp BSLH  &kp DEL
&kp TILDE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans           &trans             &none          &Joyce18889     &kp COLON      &kp APOS  &kp MINUS  &kp FSLH  &kp QUESTION
                                                     &none            &kp LEFT_SHIFT     &none          &mo 4           &none          &trans
            >;
        };

        layer_3 {
            bindings = <
&kp LG(C_PAUSE)  &mkp RCLK         &kp LS(LC(UP_ARROW))  &mkp LCLK          &kp LC(PAGE_UP)    &kp LC(C)    &none  &kp F1   &kp F2   &kp F3      &kp F4         &kp F5
&kp LEFT_SHIFT   &kp LS(LC(LEFT))  &kp LS(LC(DOWN))      &kp LS(LC(RIGHT))  &kp LC(PAGE_DOWN)  &kp LC(X)    &none  &kp F6   &kp F7   &kp F8      &kp F9         &kp F10
&trans           &kp F13           &kp F14               &kp F15            &kp F16            &kp LC(V)    &none  &kp F11  &kp F12  &kp LS(F2)  &kp LC(LA(A))  &kp LA(LC(NUMBER_1))
                                                         &none              &kp F5             &none        &none  &none    &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR      &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans        &trans  &trans
            >;
        };
    };
};
